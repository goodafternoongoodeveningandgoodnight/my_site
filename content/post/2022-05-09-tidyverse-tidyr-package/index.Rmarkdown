---
title: Tidyverse Tidyr Package (Updating)
author: Sikai Huang
date: '2022-05-09'
slug: tidyverse-tidyr-package
categories:
  - R
tags:
  - RStudio
---

How to do with messy data at hand? What does tidy data looks like?
![TidyData](images/tidy_data.png)
Tidy data includes three key points:
- each row includes each observation
- each column stands for each variable
- each cell contains each value


let's look at an example of messy data:
```{r echo=FALSE, message=FALSE, warning=FALSE}
library(tidyr)
library(DT)

data(package = "tidyr") # Buitl in dataset in the package Tidyer
datatable(billboard, options = list(pageLength = 5))
```

## Separate a character column into multiple columns
df contains strings with both a name and sort of drinks. We will tidy this dataset so that each variable gets its own column.
```{r message=FALSE, warning=FALSE}
library(tidyr)
df <- data.frame(x = c("Joy:Milk", "Monica:Coffee", "Chandler:Tea", "Rachel:Juice", NA))
df %>% separate(x, into = c("name","drink"), sep = ":", convert = TRUE) 
```

## Unite multiple columns into one by pasting strings together
```{r}
df <- data.frame(name = c("Joy", "Monica", NA), drink = c("Milk", "Coffee", NA))
df
df %>% unite("Love", name, drink, sep =" loves ", remove = FALSE)
df %>% unite("Love", name, drink, sep =" loves ", na.rm = TRUE, remove = FALSE) # To remove missing values:
```

## Separate a collapsed column into multiple rows
```{r}
df <- data.frame(
  name = c("Joy", "Monica/Chandler", "Rachel/Ross"),
  drink = c("Milk", "Coffee/Tea", "Juice/Water")
  )
df %>% 
  separate_rows(name, drink, sep = "/", convert = TRUE)
```

## Fill in missing values with previous or next value
```{r message=FALSE, warning=FALSE}
sales <- tibble::tribble(
  ~quarter, ~year, ~sales,
  "Q1",    2000,    66013,
  "Q2",      NA,    69182,
  "Q3",      NA,    53175,
  "Q4",      NA,    21001,
  "Q1",    2001,    46036,
  "Q2",      NA,    58842,
  "Q3",      NA,    44568,
  "Q4",      NA,    50197,
  "Q1",    2002,    39113,
  "Q2",      NA,    41668,
  "Q3",      NA,    30144,
  "Q4",      NA,    52897,
  "Q1",    2004,    32129,
  "Q2",      NA,    67686,
  "Q3",      NA,    31768,
  "Q4",      NA,    49094
)
# `fill()` defaults to replacing missing data from top to bottom
sales_df <- sales %>% fill(year, .direction = "down")
sales_df
```
Create a line plot with sales per quarter colored by year
```{r echo=FALSE, message=FALSE, warning=FALSE}
library(ggplot2)
sales_df %>% 
  ggplot(aes(x = quarter , y = sales, color = year, group = year)) +
  geom_line() +
  theme_classic()
```

## Pivot data from wide to long
```{r}
```


